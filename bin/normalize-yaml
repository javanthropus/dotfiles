#!/usr/bin/env ruby

require 'yaml'

def normalize(o)
  case o
  when Hash
    o = o.map do |k, v|
      [k, normalize(v)]
    end.sort.to_h
  when Array
    o = o.map { |v| normalize(v) }.sort_by! { |v| v.to_s }
  end

  o
end

puts YAML.dump_stream(
  *YAML.load_stream($stdin)
  # Discard empty documents.
  .select { |h| h }
  # Assume k8s manifests and sort by kind and name.
  .sort_by { |manifest| [manifest['kind'], manifest['metadata']['name']] }
  # Normalize each document individually in order to preserve the k8s specific
  # sort order.
  .map { |manifest| normalize(manifest) }
)
